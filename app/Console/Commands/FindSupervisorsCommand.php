<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\User;
use App\Models\Admin;
use App\Models\Supervisor;
use Spatie\Permission\Models\Role;

class FindSupervisorsCommand extends Command
{
    protected $signature = 'find:supervisors';
    protected $description = 'ุงูุจุญุซ ุนู ุฌููุน ุงููุดุฑููู ูุนุฑุถ ุจูุงูุงุชูู';

    public function handle()
    {
        $this->info('๐ ุงูุจุญุซ ุนู ุงููุดุฑููู ูู ุงููุธุงู...');
        $this->newLine();

        // ุงูุจุญุซ ูู ุฌุฏูู ุงููุณุชุฎุฏููู
        $this->line('๐ ุงูุจุญุซ ูู ุฌุฏูู ุงููุณุชุฎุฏููู (users):');
        $this->line(str_repeat('-', 50));

        try {
            $users = User::all();
            $this->info("ุฅุฌูุงูู ุงููุณุชุฎุฏููู: {$users->count()}");
            
            foreach ($users as $user) {
                $this->line("ุงููุนุฑู: {$user->id} | ุงูุงุณู: {$user->name} | ุงูุฅูููู: {$user->email}");
                
                // ุงูุชุญูู ูู ุงูุฃุฏูุงุฑ
                if (method_exists($user, 'roles')) {
                    $roles = $user->roles->pluck('name')->toArray();
                    if (!empty($roles)) {
                        $this->comment("  ุงูุฃุฏูุงุฑ: " . implode(', ', $roles));
                    }
                }
            }
        } catch (\Exception $e) {
            $this->error("ุฎุทุฃ ูู ุฌุฏูู ุงููุณุชุฎุฏููู: " . $e->getMessage());
        }

        $this->newLine();

        // ุงูุจุญุซ ูู ุงููุดุฑููู ุญุณุจ ุงูุฃุฏูุงุฑ
        $this->line('๐จโ๐ผ ุงููุดุฑููู ุงููุณุฌููู ูู ุงููุธุงู (ุญุณุจ ุงูุฃุฏูุงุฑ):');
        $this->line(str_repeat('-', 50));

        try {
            $supervisors = User::whereHas('roles', function($query) {
                $query->where('name', 'supervisor');
            })->get();

            if ($supervisors->count() > 0) {
                $this->info("ุฅุฌูุงูู ุงููุดุฑููู: {$supervisors->count()}");
                foreach ($supervisors as $supervisor) {
                    $this->line("ุงููุนุฑู: {$supervisor->id} | ุงูุงุณู: {$supervisor->name} | ุงูุฅูููู: {$supervisor->email}");
                    $this->comment("  ๐ ููุฏุฎูู: ุงุณุชุฎุฏู ุงูุฅูููู + ูููุฉ ุงููุฑูุฑ (ูุดูุฑุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช)");
                    
                    // ุนุฑุถ ุฑูู ุงููููุฉ ุฅุฐุง ูุงู ูุชููุฑุงู
                    if (isset($supervisor->identity_number)) {
                        $this->line("  ๐ ุฑูู ุงููููุฉ: {$supervisor->identity_number}");
                    }
                }
            } else {
                $this->warn("ูู ูุชู ุงูุนุซูุฑ ุนูู ูุดุฑููู ูุณุฌููู!");
            }
        } catch (\Exception $e) {
            $this->error("ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุงููุดุฑููู: " . $e->getMessage());
        }

        $this->newLine();

        // ุงูุจุญุซ ูู ุฌุฏูู ุงููุดุฑููู
        $this->line('๐จโ๐ซ ุงูุจุญุซ ูู ุฌุฏูู ุงููุดุฑููู (supervisors):');
        $this->line(str_repeat('-', 50));

        try {
            $supervisors = Supervisor::all();
            $this->info("ุฅุฌูุงูู ุงููุดุฑููู: {$supervisors->count()}");
            
            foreach ($supervisors as $supervisor) {
                $this->line("ุงููุนุฑู: {$supervisor->id}");
                $this->line("ุงูุงุณู: {$supervisor->name}");
                if (isset($supervisor->email)) {
                    $this->line("ุงูุฅูููู: {$supervisor->email}");
                }
                if (isset($supervisor->phone)) {
                    $this->line("ุงููุงุชู: {$supervisor->phone}");
                }
                if (isset($supervisor->identity_number)) {
                    $this->line("ุฑูู ุงููููุฉ: {$supervisor->identity_number}");
                }
                if (isset($supervisor->password)) {
                    $this->comment("ูููุฉ ุงููุฑูุฑ ุงููุดูุฑุฉ: " . substr($supervisor->password, 0, 20) . "...");
                }
                $this->line(str_repeat('-', 30));
            }
        } catch (\Exception $e) {
            $this->error("ุฎุทุฃ ูู ุฌุฏูู ุงููุดุฑููู: " . $e->getMessage());
        }

        $this->newLine();

        // ุงูุจุญุซ ุนู ุงูุฃุฏูุงุฑ
        $this->line('๐ญ ุงูุจุญุซ ูู ุงูุฃุฏูุงุฑ (roles):');
        $this->line(str_repeat('-', 50));

        try {
            $roles = Role::all();
            $this->info("ุฅุฌูุงูู ุงูุฃุฏูุงุฑ: {$roles->count()}");
            
            foreach ($roles as $role) {
                $this->line("ุงูุฏูุฑ: {$role->name} | ุงูุญุงุฑุณ: {$role->guard_name}");
                
                // ุนุฑุถ ุงููุณุชุฎุฏููู ููู ุฏูุฑ
                if (method_exists($role, 'users')) {
                    $roleUsers = $role->users;
                    if ($roleUsers->count() > 0) {
                        $this->comment("  ุงููุณุชุฎุฏููู:");
                        foreach ($roleUsers as $user) {
                            $this->comment("    - {$user->name} ({$user->email})");
                        }
                    }
                }
            }
        } catch (\Exception $e) {
            $this->error("ุฎุทุฃ ูู ุงูุฃุฏูุงุฑ: " . $e->getMessage());
        }

        $this->newLine();

        // ูุญุงููุฉ ุฅูุดุงุก ูุดุฑู ุชุฌุฑูุจู
        $this->line('๐ ุฅูุดุงุก ูุดุฑู ุชุฌุฑูุจู:');
        $this->line(str_repeat('-', 50));

        if ($this->confirm('ูู ุชุฑูุฏ ุฅูุดุงุก ูุดุฑู ุชุฌุฑูุจู ููุงุฎุชุจุงุฑุ')) {
            try {
                $demoSupervisor = User::create([
                    'name' => 'ูุดุฑู ุชุฌุฑูุจู',
                    'email' => 'supervisor@demo.com',
                    'password' => bcrypt('123456'),
                    'email_verified_at' => now(),
                ]);

                // ุฅุถุงูุฉ ุฏูุฑ ุงููุดุฑู ุฅุฐุง ูุงู ููุฌูุฏุงู
                $supervisorRole = Role::where('name', 'supervisor')->first();
                if ($supervisorRole) {
                    $demoSupervisor->assignRole($supervisorRole);
                    $this->success("ุชู ุฅูุดุงุก ุงููุดุฑู ุงูุชุฌุฑูุจู ุจูุฌุงุญ!");
                    $this->line("ุงูุฅูููู: supervisor@demo.com");
                    $this->line("ูููุฉ ุงููุฑูุฑ: 123456");
                } else {
                    $this->warning("ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู ูููู ุฏูุฑ ุงููุดุฑู ุบูุฑ ููุฌูุฏ");
                }

            } catch (\Exception $e) {
                $this->error("ุฎุทุฃ ูู ุฅูุดุงุก ุงููุดุฑู ุงูุชุฌุฑูุจู: " . $e->getMessage());
            }
        }

        $this->newLine();
        $this->info('โ ุงูุชูู ุงูุจุญุซ ุนู ุงููุดุฑููู');
    }
}
