[phases.setup]
nixPkgs = ['php83', 'php83Extensions.bcmath', 'php83Extensions.ctype', 'php83Extensions.curl', 'php83Extensions.dom', 'php83Extensions.fileinfo', 'php83Extensions.filter', 'php83Extensions.hash', 'php83Extensions.json', 'php83Extensions.mbstring', 'php83Extensions.openssl', 'php83Extensions.pcre', 'php83Extensions.pdo', 'php83Extensions.pdo_mysql', 'php83Extensions.session', 'php83Extensions.tokenizer', 'php83Extensions.xml', 'php83Extensions.zip', 'php83Extensions.gd', 'php83Extensions.exif', 'php83Extensions.intl', 'php83Extensions.sodium', 'nodejs_18', 'npm']

[phases.install] 
cmds = [
  # Setup directories and permissions
  "chmod +x railway-setup.sh",
  "bash railway-setup.sh",
  # Copy environment file
  "cp .env.example .env",
  # Install PHP dependencies with platform ignore
  "composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist --ignore-platform-reqs",
  # Generate app key
  "php artisan key:generate --force --no-interaction",
  # Install frontend dependencies and build if package.json exists
  "[ -f package.json ] && npm ci --production || echo 'No package.json found'",
  "[ -f package.json ] && npm run build || echo 'No build script found'"
]

[phases.build]
cmds = [
    # Clear any cached config first
    "php artisan config:clear",
    "php artisan route:clear", 
    "php artisan view:clear",
    # Then cache for production
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache"
]

[start]
cmd = "php artisan serve --host=0.0.0.0 --port=$PORT"
